# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type School {
  id: ID!
  name: String
  country: String
  country_name: String
  language: String
  domain: String
  slug: String
  status: String
  settings: JSON
  created_at: DateTime
  updated_at: DateTime
  cms_users(where: CmsUserWhereInput! = {}, orderBy: [CmsUserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CmsUserWhereUniqueInput): [CmsUser!]
  cms_usersCount(where: CmsUserWhereInput! = {}): Int
  contents(where: ContentWhereInput! = {}, orderBy: [ContentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentWhereUniqueInput): [Content!]
  contentsCount(where: ContentWhereInput! = {}): Int
  categories(where: ContentCategoryWhereInput! = {}, orderBy: [ContentCategoryOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentCategoryWhereUniqueInput): [ContentCategory!]
  categoriesCount(where: ContentCategoryWhereInput! = {}): Int
  media_files(where: MediaFileWhereInput! = {}, orderBy: [MediaFileOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MediaFileWhereUniqueInput): [MediaFile!]
  media_filesCount(where: MediaFileWhereInput! = {}): Int
  navigation_menus(where: NavigationMenuWhereInput! = {}, orderBy: [NavigationMenuOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: NavigationMenuWhereUniqueInput): [NavigationMenu!]
  navigation_menusCount(where: NavigationMenuWhereInput! = {}): Int
  site_settings(where: SiteSettingWhereInput! = {}, orderBy: [SiteSettingOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SiteSettingWhereUniqueInput): [SiteSetting!]
  site_settingsCount(where: SiteSettingWhereInput! = {}): Int
  sections(where: SectionWhereInput! = {}, orderBy: [SectionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SectionWhereUniqueInput): [Section!]
  sectionsCount(where: SectionWhereInput! = {}): Int
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input SchoolWhereUniqueInput {
  id: ID
  domain: String
  slug: String
}

input SchoolWhereInput {
  AND: [SchoolWhereInput!]
  OR: [SchoolWhereInput!]
  NOT: [SchoolWhereInput!]
  id: IDFilter
  name: StringFilter
  country: StringFilter
  country_name: StringFilter
  language: StringFilter
  domain: StringFilter
  slug: StringFilter
  status: StringNullableFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  cms_users: CmsUserManyRelationFilter
  contents: ContentManyRelationFilter
  categories: ContentCategoryManyRelationFilter
  media_files: MediaFileManyRelationFilter
  navigation_menus: NavigationMenuManyRelationFilter
  site_settings: SiteSettingManyRelationFilter
  sections: SectionManyRelationFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: StringNullableFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input CmsUserManyRelationFilter {
  every: CmsUserWhereInput
  some: CmsUserWhereInput
  none: CmsUserWhereInput
}

input ContentManyRelationFilter {
  every: ContentWhereInput
  some: ContentWhereInput
  none: ContentWhereInput
}

input ContentCategoryManyRelationFilter {
  every: ContentCategoryWhereInput
  some: ContentCategoryWhereInput
  none: ContentCategoryWhereInput
}

input MediaFileManyRelationFilter {
  every: MediaFileWhereInput
  some: MediaFileWhereInput
  none: MediaFileWhereInput
}

input NavigationMenuManyRelationFilter {
  every: NavigationMenuWhereInput
  some: NavigationMenuWhereInput
  none: NavigationMenuWhereInput
}

input SiteSettingManyRelationFilter {
  every: SiteSettingWhereInput
  some: SiteSettingWhereInput
  none: SiteSettingWhereInput
}

input SectionManyRelationFilter {
  every: SectionWhereInput
  some: SectionWhereInput
  none: SectionWhereInput
}

input SchoolOrderByInput {
  id: OrderDirection
  name: OrderDirection
  country: OrderDirection
  country_name: OrderDirection
  language: OrderDirection
  domain: OrderDirection
  slug: OrderDirection
  status: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input SchoolUpdateInput {
  name: String
  country: String
  country_name: String
  language: String
  domain: String
  slug: String
  status: String
  settings: JSON
  created_at: DateTime
  updated_at: DateTime
  cms_users: CmsUserRelateToManyForUpdateInput
  contents: ContentRelateToManyForUpdateInput
  categories: ContentCategoryRelateToManyForUpdateInput
  media_files: MediaFileRelateToManyForUpdateInput
  navigation_menus: NavigationMenuRelateToManyForUpdateInput
  site_settings: SiteSettingRelateToManyForUpdateInput
  sections: SectionRelateToManyForUpdateInput
}

input CmsUserRelateToManyForUpdateInput {
  disconnect: [CmsUserWhereUniqueInput!]
  set: [CmsUserWhereUniqueInput!]
  create: [CmsUserCreateInput!]
  connect: [CmsUserWhereUniqueInput!]
}

input ContentRelateToManyForUpdateInput {
  disconnect: [ContentWhereUniqueInput!]
  set: [ContentWhereUniqueInput!]
  create: [ContentCreateInput!]
  connect: [ContentWhereUniqueInput!]
}

input ContentCategoryRelateToManyForUpdateInput {
  disconnect: [ContentCategoryWhereUniqueInput!]
  set: [ContentCategoryWhereUniqueInput!]
  create: [ContentCategoryCreateInput!]
  connect: [ContentCategoryWhereUniqueInput!]
}

input MediaFileRelateToManyForUpdateInput {
  disconnect: [MediaFileWhereUniqueInput!]
  set: [MediaFileWhereUniqueInput!]
  create: [MediaFileCreateInput!]
  connect: [MediaFileWhereUniqueInput!]
}

input NavigationMenuRelateToManyForUpdateInput {
  disconnect: [NavigationMenuWhereUniqueInput!]
  set: [NavigationMenuWhereUniqueInput!]
  create: [NavigationMenuCreateInput!]
  connect: [NavigationMenuWhereUniqueInput!]
}

input SiteSettingRelateToManyForUpdateInput {
  disconnect: [SiteSettingWhereUniqueInput!]
  set: [SiteSettingWhereUniqueInput!]
  create: [SiteSettingCreateInput!]
  connect: [SiteSettingWhereUniqueInput!]
}

input SectionRelateToManyForUpdateInput {
  disconnect: [SectionWhereUniqueInput!]
  set: [SectionWhereUniqueInput!]
  create: [SectionCreateInput!]
  connect: [SectionWhereUniqueInput!]
}

input SchoolUpdateArgs {
  where: SchoolWhereUniqueInput!
  data: SchoolUpdateInput!
}

input SchoolCreateInput {
  name: String
  country: String
  country_name: String
  language: String
  domain: String
  slug: String
  status: String
  settings: JSON
  created_at: DateTime
  updated_at: DateTime
  cms_users: CmsUserRelateToManyForCreateInput
  contents: ContentRelateToManyForCreateInput
  categories: ContentCategoryRelateToManyForCreateInput
  media_files: MediaFileRelateToManyForCreateInput
  navigation_menus: NavigationMenuRelateToManyForCreateInput
  site_settings: SiteSettingRelateToManyForCreateInput
  sections: SectionRelateToManyForCreateInput
}

input CmsUserRelateToManyForCreateInput {
  create: [CmsUserCreateInput!]
  connect: [CmsUserWhereUniqueInput!]
}

input ContentRelateToManyForCreateInput {
  create: [ContentCreateInput!]
  connect: [ContentWhereUniqueInput!]
}

input ContentCategoryRelateToManyForCreateInput {
  create: [ContentCategoryCreateInput!]
  connect: [ContentCategoryWhereUniqueInput!]
}

input MediaFileRelateToManyForCreateInput {
  create: [MediaFileCreateInput!]
  connect: [MediaFileWhereUniqueInput!]
}

input NavigationMenuRelateToManyForCreateInput {
  create: [NavigationMenuCreateInput!]
  connect: [NavigationMenuWhereUniqueInput!]
}

input SiteSettingRelateToManyForCreateInput {
  create: [SiteSettingCreateInput!]
  connect: [SiteSettingWhereUniqueInput!]
}

input SectionRelateToManyForCreateInput {
  create: [SectionCreateInput!]
  connect: [SectionWhereUniqueInput!]
}

type CmsUser {
  id: ID!
  tenant: School
  email: String
  password: PasswordState
  first_name: String
  last_name: String
  role: String
  avatar_url: String
  is_active: Boolean
  last_login: DateTime
  created_at: DateTime
  updated_at: DateTime
  authored_contents(where: ContentWhereInput! = {}, orderBy: [ContentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentWhereUniqueInput): [Content!]
  authored_contentsCount(where: ContentWhereInput! = {}): Int
  uploaded_media(where: MediaFileWhereInput! = {}, orderBy: [MediaFileOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MediaFileWhereUniqueInput): [MediaFile!]
  uploaded_mediaCount(where: MediaFileWhereInput! = {}): Int
  updated_settings(where: SiteSettingWhereInput! = {}, orderBy: [SiteSettingOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SiteSettingWhereUniqueInput): [SiteSetting!]
  updated_settingsCount(where: SiteSettingWhereInput! = {}): Int
}

type PasswordState {
  isSet: Boolean!
}

input CmsUserWhereUniqueInput {
  id: ID
  email: String
}

input CmsUserWhereInput {
  AND: [CmsUserWhereInput!]
  OR: [CmsUserWhereInput!]
  NOT: [CmsUserWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  email: StringFilter
  password: PasswordFilter
  first_name: StringFilter
  last_name: StringFilter
  role: StringNullableFilter
  avatar_url: StringFilter
  is_active: BooleanFilter
  last_login: DateTimeNullableFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  authored_contents: ContentManyRelationFilter
  uploaded_media: MediaFileManyRelationFilter
  updated_settings: SiteSettingManyRelationFilter
}

input PasswordFilter {
  isSet: Boolean!
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input CmsUserOrderByInput {
  id: OrderDirection
  email: OrderDirection
  first_name: OrderDirection
  last_name: OrderDirection
  role: OrderDirection
  avatar_url: OrderDirection
  is_active: OrderDirection
  last_login: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input CmsUserUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  email: String
  password: String
  first_name: String
  last_name: String
  role: String
  avatar_url: String
  is_active: Boolean
  last_login: DateTime
  created_at: DateTime
  updated_at: DateTime
  authored_contents: ContentRelateToManyForUpdateInput
  uploaded_media: MediaFileRelateToManyForUpdateInput
  updated_settings: SiteSettingRelateToManyForUpdateInput
}

input SchoolRelateToOneForUpdateInput {
  create: SchoolCreateInput
  connect: SchoolWhereUniqueInput
  disconnect: Boolean
}

input CmsUserUpdateArgs {
  where: CmsUserWhereUniqueInput!
  data: CmsUserUpdateInput!
}

input CmsUserCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  email: String
  password: String
  first_name: String
  last_name: String
  role: String
  avatar_url: String
  is_active: Boolean
  last_login: DateTime
  created_at: DateTime
  updated_at: DateTime
  authored_contents: ContentRelateToManyForCreateInput
  uploaded_media: MediaFileRelateToManyForCreateInput
  updated_settings: SiteSettingRelateToManyForCreateInput
}

input SchoolRelateToOneForCreateInput {
  create: SchoolCreateInput
  connect: SchoolWhereUniqueInput
}

type ContentCategory {
  id: ID!
  tenant: School
  name: String
  slug: String
  description: String
  parent: ContentCategory
  children(where: ContentCategoryWhereInput! = {}, orderBy: [ContentCategoryOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentCategoryWhereUniqueInput): [ContentCategory!]
  childrenCount(where: ContentCategoryWhereInput! = {}): Int
  sort_order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  contents(where: ContentWhereInput! = {}, orderBy: [ContentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentWhereUniqueInput): [Content!]
  contentsCount(where: ContentWhereInput! = {}): Int
}

input ContentCategoryWhereUniqueInput {
  id: ID
}

input ContentCategoryWhereInput {
  AND: [ContentCategoryWhereInput!]
  OR: [ContentCategoryWhereInput!]
  NOT: [ContentCategoryWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  name: StringFilter
  slug: StringFilter
  description: StringFilter
  parent: ContentCategoryWhereInput
  children: ContentCategoryManyRelationFilter
  sort_order: IntNullableFilter
  is_active: BooleanFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  contents: ContentManyRelationFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input ContentCategoryOrderByInput {
  id: OrderDirection
  name: OrderDirection
  slug: OrderDirection
  description: OrderDirection
  sort_order: OrderDirection
  is_active: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input ContentCategoryUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  name: String
  slug: String
  description: String
  parent: ContentCategoryRelateToOneForUpdateInput
  children: ContentCategoryRelateToManyForUpdateInput
  sort_order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  contents: ContentRelateToManyForUpdateInput
}

input ContentCategoryRelateToOneForUpdateInput {
  create: ContentCategoryCreateInput
  connect: ContentCategoryWhereUniqueInput
  disconnect: Boolean
}

input ContentCategoryUpdateArgs {
  where: ContentCategoryWhereUniqueInput!
  data: ContentCategoryUpdateInput!
}

input ContentCategoryCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  name: String
  slug: String
  description: String
  parent: ContentCategoryRelateToOneForCreateInput
  children: ContentCategoryRelateToManyForCreateInput
  sort_order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  contents: ContentRelateToManyForCreateInput
}

input ContentCategoryRelateToOneForCreateInput {
  create: ContentCategoryCreateInput
  connect: ContentCategoryWhereUniqueInput
}

type Content {
  id: ID!
  tenant: School
  category: ContentCategory
  author: CmsUser
  title: String
  slug: String
  excerpt: String
  body: String
  featured_image_url: String
  meta_title: String
  meta_description: String
  status: String
  language: String
  content_type: String
  is_featured: Boolean
  view_count: Int
  sort_order: Int
  published_at: DateTime
  expires_at: DateTime
  scheduled_at: DateTime
  seo_settings: JSON
  custom_fields: JSON
  created_at: DateTime
  updated_at: DateTime
  menu_items(where: NavigationMenuItemWhereInput! = {}, orderBy: [NavigationMenuItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: NavigationMenuItemWhereUniqueInput): [NavigationMenuItem!]
  menu_itemsCount(where: NavigationMenuItemWhereInput! = {}): Int
}

input ContentWhereUniqueInput {
  id: ID
}

input ContentWhereInput {
  AND: [ContentWhereInput!]
  OR: [ContentWhereInput!]
  NOT: [ContentWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  category: ContentCategoryWhereInput
  author: CmsUserWhereInput
  title: StringFilter
  slug: StringFilter
  excerpt: StringFilter
  body: StringFilter
  featured_image_url: StringFilter
  meta_title: StringFilter
  meta_description: StringFilter
  status: StringNullableFilter
  language: StringFilter
  content_type: StringNullableFilter
  is_featured: BooleanFilter
  view_count: IntNullableFilter
  sort_order: IntNullableFilter
  published_at: DateTimeNullableFilter
  expires_at: DateTimeNullableFilter
  scheduled_at: DateTimeNullableFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  menu_items: NavigationMenuItemManyRelationFilter
}

input NavigationMenuItemManyRelationFilter {
  every: NavigationMenuItemWhereInput
  some: NavigationMenuItemWhereInput
  none: NavigationMenuItemWhereInput
}

input ContentOrderByInput {
  id: OrderDirection
  title: OrderDirection
  slug: OrderDirection
  excerpt: OrderDirection
  body: OrderDirection
  featured_image_url: OrderDirection
  meta_title: OrderDirection
  meta_description: OrderDirection
  status: OrderDirection
  language: OrderDirection
  content_type: OrderDirection
  is_featured: OrderDirection
  view_count: OrderDirection
  sort_order: OrderDirection
  published_at: OrderDirection
  expires_at: OrderDirection
  scheduled_at: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input ContentUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  category: ContentCategoryRelateToOneForUpdateInput
  author: CmsUserRelateToOneForUpdateInput
  title: String
  slug: String
  excerpt: String
  body: String
  featured_image_url: String
  meta_title: String
  meta_description: String
  status: String
  language: String
  content_type: String
  is_featured: Boolean
  view_count: Int
  sort_order: Int
  published_at: DateTime
  expires_at: DateTime
  scheduled_at: DateTime
  seo_settings: JSON
  custom_fields: JSON
  created_at: DateTime
  updated_at: DateTime
  menu_items: NavigationMenuItemRelateToManyForUpdateInput
}

input CmsUserRelateToOneForUpdateInput {
  create: CmsUserCreateInput
  connect: CmsUserWhereUniqueInput
  disconnect: Boolean
}

input NavigationMenuItemRelateToManyForUpdateInput {
  disconnect: [NavigationMenuItemWhereUniqueInput!]
  set: [NavigationMenuItemWhereUniqueInput!]
  create: [NavigationMenuItemCreateInput!]
  connect: [NavigationMenuItemWhereUniqueInput!]
}

input ContentUpdateArgs {
  where: ContentWhereUniqueInput!
  data: ContentUpdateInput!
}

input ContentCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  category: ContentCategoryRelateToOneForCreateInput
  author: CmsUserRelateToOneForCreateInput
  title: String
  slug: String
  excerpt: String
  body: String
  featured_image_url: String
  meta_title: String
  meta_description: String
  status: String
  language: String
  content_type: String
  is_featured: Boolean
  view_count: Int
  sort_order: Int
  published_at: DateTime
  expires_at: DateTime
  scheduled_at: DateTime
  seo_settings: JSON
  custom_fields: JSON
  created_at: DateTime
  updated_at: DateTime
  menu_items: NavigationMenuItemRelateToManyForCreateInput
}

input CmsUserRelateToOneForCreateInput {
  create: CmsUserCreateInput
  connect: CmsUserWhereUniqueInput
}

input NavigationMenuItemRelateToManyForCreateInput {
  create: [NavigationMenuItemCreateInput!]
  connect: [NavigationMenuItemWhereUniqueInput!]
}

type MediaFile {
  id: ID!
  tenant: School
  uploaded_by: CmsUser
  filename: String
  original_filename: String
  file_path: String
  file_url: String
  mime_type: String
  file_size: BigInt
  width: Int
  height: Int
  alt_text: String
  caption: String
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  carousel_images(where: CarouselImageWhereInput! = {}, orderBy: [CarouselImageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarouselImageWhereUniqueInput): [CarouselImage!]
  carousel_imagesCount(where: CarouselImageWhereInput! = {}): Int
  image_banners(where: ImageBannerWhereInput! = {}, orderBy: [ImageBannerOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ImageBannerWhereUniqueInput): [ImageBanner!]
  image_bannersCount(where: ImageBannerWhereInput! = {}): Int
}

scalar BigInt

input MediaFileWhereUniqueInput {
  id: ID
}

input MediaFileWhereInput {
  AND: [MediaFileWhereInput!]
  OR: [MediaFileWhereInput!]
  NOT: [MediaFileWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  uploaded_by: CmsUserWhereInput
  filename: StringFilter
  original_filename: StringFilter
  file_path: StringFilter
  file_url: StringFilter
  mime_type: StringFilter
  file_size: BigIntFilter
  width: IntNullableFilter
  height: IntNullableFilter
  alt_text: StringFilter
  caption: StringFilter
  is_active: BooleanFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  carousel_images: CarouselImageManyRelationFilter
  image_banners: ImageBannerManyRelationFilter
}

input BigIntFilter {
  equals: BigInt
  in: [BigInt!]
  notIn: [BigInt!]
  lt: BigInt
  lte: BigInt
  gt: BigInt
  gte: BigInt
  not: BigIntFilter
}

input CarouselImageManyRelationFilter {
  every: CarouselImageWhereInput
  some: CarouselImageWhereInput
  none: CarouselImageWhereInput
}

input ImageBannerManyRelationFilter {
  every: ImageBannerWhereInput
  some: ImageBannerWhereInput
  none: ImageBannerWhereInput
}

input MediaFileOrderByInput {
  id: OrderDirection
  filename: OrderDirection
  original_filename: OrderDirection
  file_path: OrderDirection
  file_url: OrderDirection
  mime_type: OrderDirection
  file_size: OrderDirection
  width: OrderDirection
  height: OrderDirection
  alt_text: OrderDirection
  caption: OrderDirection
  is_active: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input MediaFileUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  uploaded_by: CmsUserRelateToOneForUpdateInput
  filename: String
  original_filename: String
  file_path: String
  file_url: String
  mime_type: String
  file_size: BigInt
  width: Int
  height: Int
  alt_text: String
  caption: String
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  carousel_images: CarouselImageRelateToManyForUpdateInput
  image_banners: ImageBannerRelateToManyForUpdateInput
}

input CarouselImageRelateToManyForUpdateInput {
  disconnect: [CarouselImageWhereUniqueInput!]
  set: [CarouselImageWhereUniqueInput!]
  create: [CarouselImageCreateInput!]
  connect: [CarouselImageWhereUniqueInput!]
}

input ImageBannerRelateToManyForUpdateInput {
  disconnect: [ImageBannerWhereUniqueInput!]
  set: [ImageBannerWhereUniqueInput!]
  create: [ImageBannerCreateInput!]
  connect: [ImageBannerWhereUniqueInput!]
}

input MediaFileUpdateArgs {
  where: MediaFileWhereUniqueInput!
  data: MediaFileUpdateInput!
}

input MediaFileCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  uploaded_by: CmsUserRelateToOneForCreateInput
  filename: String
  original_filename: String
  file_path: String
  file_url: String
  mime_type: String
  file_size: BigInt
  width: Int
  height: Int
  alt_text: String
  caption: String
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  carousel_images: CarouselImageRelateToManyForCreateInput
  image_banners: ImageBannerRelateToManyForCreateInput
}

input CarouselImageRelateToManyForCreateInput {
  create: [CarouselImageCreateInput!]
  connect: [CarouselImageWhereUniqueInput!]
}

input ImageBannerRelateToManyForCreateInput {
  create: [ImageBannerCreateInput!]
  connect: [ImageBannerWhereUniqueInput!]
}

type NavigationMenu {
  id: ID!
  tenant: School
  name: String
  slug: String
  location: String
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  menu_items(where: NavigationMenuItemWhereInput! = {}, orderBy: [NavigationMenuItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: NavigationMenuItemWhereUniqueInput): [NavigationMenuItem!]
  menu_itemsCount(where: NavigationMenuItemWhereInput! = {}): Int
}

input NavigationMenuWhereUniqueInput {
  id: ID
}

input NavigationMenuWhereInput {
  AND: [NavigationMenuWhereInput!]
  OR: [NavigationMenuWhereInput!]
  NOT: [NavigationMenuWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  name: StringFilter
  slug: StringFilter
  location: StringFilter
  is_active: BooleanFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  menu_items: NavigationMenuItemManyRelationFilter
}

input NavigationMenuOrderByInput {
  id: OrderDirection
  name: OrderDirection
  slug: OrderDirection
  location: OrderDirection
  is_active: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input NavigationMenuUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  name: String
  slug: String
  location: String
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  menu_items: NavigationMenuItemRelateToManyForUpdateInput
}

input NavigationMenuUpdateArgs {
  where: NavigationMenuWhereUniqueInput!
  data: NavigationMenuUpdateInput!
}

input NavigationMenuCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  name: String
  slug: String
  location: String
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
  menu_items: NavigationMenuItemRelateToManyForCreateInput
}

type NavigationMenuItem {
  id: ID!
  menu: NavigationMenu
  parent: NavigationMenuItem
  children(where: NavigationMenuItemWhereInput! = {}, orderBy: [NavigationMenuItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: NavigationMenuItemWhereUniqueInput): [NavigationMenuItem!]
  childrenCount(where: NavigationMenuItemWhereInput! = {}): Int
  title: String
  url: String
  content: Content
  target: String
  css_class: String
  sort_order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input NavigationMenuItemWhereUniqueInput {
  id: ID
}

input NavigationMenuItemWhereInput {
  AND: [NavigationMenuItemWhereInput!]
  OR: [NavigationMenuItemWhereInput!]
  NOT: [NavigationMenuItemWhereInput!]
  id: IDFilter
  menu: NavigationMenuWhereInput
  parent: NavigationMenuItemWhereInput
  children: NavigationMenuItemManyRelationFilter
  title: StringFilter
  url: StringFilter
  content: ContentWhereInput
  target: StringNullableFilter
  css_class: StringFilter
  sort_order: IntNullableFilter
  is_active: BooleanFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input NavigationMenuItemOrderByInput {
  id: OrderDirection
  title: OrderDirection
  url: OrderDirection
  target: OrderDirection
  css_class: OrderDirection
  sort_order: OrderDirection
  is_active: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input NavigationMenuItemUpdateInput {
  menu: NavigationMenuRelateToOneForUpdateInput
  parent: NavigationMenuItemRelateToOneForUpdateInput
  children: NavigationMenuItemRelateToManyForUpdateInput
  title: String
  url: String
  content: ContentRelateToOneForUpdateInput
  target: String
  css_class: String
  sort_order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input NavigationMenuRelateToOneForUpdateInput {
  create: NavigationMenuCreateInput
  connect: NavigationMenuWhereUniqueInput
  disconnect: Boolean
}

input NavigationMenuItemRelateToOneForUpdateInput {
  create: NavigationMenuItemCreateInput
  connect: NavigationMenuItemWhereUniqueInput
  disconnect: Boolean
}

input ContentRelateToOneForUpdateInput {
  create: ContentCreateInput
  connect: ContentWhereUniqueInput
  disconnect: Boolean
}

input NavigationMenuItemUpdateArgs {
  where: NavigationMenuItemWhereUniqueInput!
  data: NavigationMenuItemUpdateInput!
}

input NavigationMenuItemCreateInput {
  menu: NavigationMenuRelateToOneForCreateInput
  parent: NavigationMenuItemRelateToOneForCreateInput
  children: NavigationMenuItemRelateToManyForCreateInput
  title: String
  url: String
  content: ContentRelateToOneForCreateInput
  target: String
  css_class: String
  sort_order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input NavigationMenuRelateToOneForCreateInput {
  create: NavigationMenuCreateInput
  connect: NavigationMenuWhereUniqueInput
}

input NavigationMenuItemRelateToOneForCreateInput {
  create: NavigationMenuItemCreateInput
  connect: NavigationMenuItemWhereUniqueInput
}

input ContentRelateToOneForCreateInput {
  create: ContentCreateInput
  connect: ContentWhereUniqueInput
}

type SiteSetting {
  id: ID!
  tenant: School
  setting_key: String
  setting_value: String
  setting_type: String
  description: String
  is_public: Boolean
  updated_by: CmsUser
  created_at: DateTime
  updated_at: DateTime
}

input SiteSettingWhereUniqueInput {
  id: ID
}

input SiteSettingWhereInput {
  AND: [SiteSettingWhereInput!]
  OR: [SiteSettingWhereInput!]
  NOT: [SiteSettingWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  setting_key: StringFilter
  setting_value: StringFilter
  setting_type: StringNullableFilter
  description: StringFilter
  is_public: BooleanFilter
  updated_by: CmsUserWhereInput
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input SiteSettingOrderByInput {
  id: OrderDirection
  setting_key: OrderDirection
  setting_value: OrderDirection
  setting_type: OrderDirection
  description: OrderDirection
  is_public: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input SiteSettingUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  setting_key: String
  setting_value: String
  setting_type: String
  description: String
  is_public: Boolean
  updated_by: CmsUserRelateToOneForUpdateInput
  created_at: DateTime
  updated_at: DateTime
}

input SiteSettingUpdateArgs {
  where: SiteSettingWhereUniqueInput!
  data: SiteSettingUpdateInput!
}

input SiteSettingCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  setting_key: String
  setting_value: String
  setting_type: String
  description: String
  is_public: Boolean
  updated_by: CmsUserRelateToOneForCreateInput
  created_at: DateTime
  updated_at: DateTime
}

type Section {
  id: ID!
  tenant: School
  key: String
  title: String
  description: String
  is_active: Boolean
  sort_order: Int
  created_at: DateTime
  updated_at: DateTime
  blocks(where: BlockWhereInput! = {}, orderBy: [BlockOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: BlockWhereUniqueInput): [Block!]
  blocksCount(where: BlockWhereInput! = {}): Int
}

input SectionWhereUniqueInput {
  id: ID
  key: String
}

input SectionWhereInput {
  AND: [SectionWhereInput!]
  OR: [SectionWhereInput!]
  NOT: [SectionWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  key: StringFilter
  title: StringFilter
  description: StringFilter
  is_active: BooleanFilter
  sort_order: IntNullableFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  blocks: BlockManyRelationFilter
}

input BlockManyRelationFilter {
  every: BlockWhereInput
  some: BlockWhereInput
  none: BlockWhereInput
}

input SectionOrderByInput {
  id: OrderDirection
  key: OrderDirection
  title: OrderDirection
  description: OrderDirection
  is_active: OrderDirection
  sort_order: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input SectionUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  key: String
  title: String
  description: String
  is_active: Boolean
  sort_order: Int
  created_at: DateTime
  updated_at: DateTime
  blocks: BlockRelateToManyForUpdateInput
}

input BlockRelateToManyForUpdateInput {
  disconnect: [BlockWhereUniqueInput!]
  set: [BlockWhereUniqueInput!]
  create: [BlockCreateInput!]
  connect: [BlockWhereUniqueInput!]
}

input SectionUpdateArgs {
  where: SectionWhereUniqueInput!
  data: SectionUpdateInput!
}

input SectionCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  key: String
  title: String
  description: String
  is_active: Boolean
  sort_order: Int
  created_at: DateTime
  updated_at: DateTime
  blocks: BlockRelateToManyForCreateInput
}

input BlockRelateToManyForCreateInput {
  create: [BlockCreateInput!]
  connect: [BlockWhereUniqueInput!]
}

type Block {
  id: ID!
  section: Section
  type: String
  title: String
  order: Int
  visible: Boolean
  data: JSON
  created_at: DateTime
  updated_at: DateTime
  carousel: Carousel
  rich_text: RichText
  image_banner: ImageBanner
  video_embed: VideoEmbed
  custom_block: CustomBlock
}

input BlockWhereUniqueInput {
  id: ID
  carousel: CarouselWhereUniqueInput
  rich_text: RichTextWhereUniqueInput
  image_banner: ImageBannerWhereUniqueInput
  video_embed: VideoEmbedWhereUniqueInput
  custom_block: CustomBlockWhereUniqueInput
}

input BlockWhereInput {
  AND: [BlockWhereInput!]
  OR: [BlockWhereInput!]
  NOT: [BlockWhereInput!]
  id: IDFilter
  section: SectionWhereInput
  type: StringFilter
  title: StringFilter
  order: IntNullableFilter
  visible: BooleanFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  carousel: CarouselWhereInput
  rich_text: RichTextWhereInput
  image_banner: ImageBannerWhereInput
  video_embed: VideoEmbedWhereInput
  custom_block: CustomBlockWhereInput
}

input BlockOrderByInput {
  id: OrderDirection
  type: OrderDirection
  title: OrderDirection
  order: OrderDirection
  visible: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input BlockUpdateInput {
  section: SectionRelateToOneForUpdateInput
  type: String
  title: String
  order: Int
  visible: Boolean
  data: JSON
  created_at: DateTime
  updated_at: DateTime
  carousel: CarouselRelateToOneForUpdateInput
  rich_text: RichTextRelateToOneForUpdateInput
  image_banner: ImageBannerRelateToOneForUpdateInput
  video_embed: VideoEmbedRelateToOneForUpdateInput
  custom_block: CustomBlockRelateToOneForUpdateInput
}

input SectionRelateToOneForUpdateInput {
  create: SectionCreateInput
  connect: SectionWhereUniqueInput
  disconnect: Boolean
}

input CarouselRelateToOneForUpdateInput {
  create: CarouselCreateInput
  connect: CarouselWhereUniqueInput
  disconnect: Boolean
}

input RichTextRelateToOneForUpdateInput {
  create: RichTextCreateInput
  connect: RichTextWhereUniqueInput
  disconnect: Boolean
}

input ImageBannerRelateToOneForUpdateInput {
  create: ImageBannerCreateInput
  connect: ImageBannerWhereUniqueInput
  disconnect: Boolean
}

input VideoEmbedRelateToOneForUpdateInput {
  create: VideoEmbedCreateInput
  connect: VideoEmbedWhereUniqueInput
  disconnect: Boolean
}

input CustomBlockRelateToOneForUpdateInput {
  create: CustomBlockCreateInput
  connect: CustomBlockWhereUniqueInput
  disconnect: Boolean
}

input BlockUpdateArgs {
  where: BlockWhereUniqueInput!
  data: BlockUpdateInput!
}

input BlockCreateInput {
  section: SectionRelateToOneForCreateInput
  type: String
  title: String
  order: Int
  visible: Boolean
  data: JSON
  created_at: DateTime
  updated_at: DateTime
  carousel: CarouselRelateToOneForCreateInput
  rich_text: RichTextRelateToOneForCreateInput
  image_banner: ImageBannerRelateToOneForCreateInput
  video_embed: VideoEmbedRelateToOneForCreateInput
  custom_block: CustomBlockRelateToOneForCreateInput
}

input SectionRelateToOneForCreateInput {
  create: SectionCreateInput
  connect: SectionWhereUniqueInput
}

input CarouselRelateToOneForCreateInput {
  create: CarouselCreateInput
  connect: CarouselWhereUniqueInput
}

input RichTextRelateToOneForCreateInput {
  create: RichTextCreateInput
  connect: RichTextWhereUniqueInput
}

input ImageBannerRelateToOneForCreateInput {
  create: ImageBannerCreateInput
  connect: ImageBannerWhereUniqueInput
}

input VideoEmbedRelateToOneForCreateInput {
  create: VideoEmbedCreateInput
  connect: VideoEmbedWhereUniqueInput
}

input CustomBlockRelateToOneForCreateInput {
  create: CustomBlockCreateInput
  connect: CustomBlockWhereUniqueInput
}

type Carousel {
  id: ID!
  block: Block
  name: String
  autoplay: Boolean
  interval_ms: Int
  show_arrows: Boolean
  show_dots: Boolean
  aspect_ratio: String
  created_at: DateTime
  updated_at: DateTime
  images(where: CarouselImageWhereInput! = {}, orderBy: [CarouselImageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarouselImageWhereUniqueInput): [CarouselImage!]
  imagesCount(where: CarouselImageWhereInput! = {}): Int
}

input CarouselWhereUniqueInput {
  id: ID
  block: BlockWhereUniqueInput
}

input CarouselWhereInput {
  AND: [CarouselWhereInput!]
  OR: [CarouselWhereInput!]
  NOT: [CarouselWhereInput!]
  id: IDFilter
  block: BlockWhereInput
  name: StringFilter
  autoplay: BooleanFilter
  interval_ms: IntNullableFilter
  show_arrows: BooleanFilter
  show_dots: BooleanFilter
  aspect_ratio: StringFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
  images: CarouselImageManyRelationFilter
}

input CarouselOrderByInput {
  id: OrderDirection
  name: OrderDirection
  autoplay: OrderDirection
  interval_ms: OrderDirection
  show_arrows: OrderDirection
  show_dots: OrderDirection
  aspect_ratio: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input CarouselUpdateInput {
  block: BlockRelateToOneForUpdateInput
  name: String
  autoplay: Boolean
  interval_ms: Int
  show_arrows: Boolean
  show_dots: Boolean
  aspect_ratio: String
  created_at: DateTime
  updated_at: DateTime
  images: CarouselImageRelateToManyForUpdateInput
}

input BlockRelateToOneForUpdateInput {
  create: BlockCreateInput
  connect: BlockWhereUniqueInput
  disconnect: Boolean
}

input CarouselUpdateArgs {
  where: CarouselWhereUniqueInput!
  data: CarouselUpdateInput!
}

input CarouselCreateInput {
  block: BlockRelateToOneForCreateInput
  name: String
  autoplay: Boolean
  interval_ms: Int
  show_arrows: Boolean
  show_dots: Boolean
  aspect_ratio: String
  created_at: DateTime
  updated_at: DateTime
  images: CarouselImageRelateToManyForCreateInput
}

input BlockRelateToOneForCreateInput {
  create: BlockCreateInput
  connect: BlockWhereUniqueInput
}

type CarouselImage {
  id: ID!
  carousel: Carousel
  media: MediaFile
  url: String
  alt: String
  caption: String
  link_url: String
  order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input CarouselImageWhereUniqueInput {
  id: ID
}

input CarouselImageWhereInput {
  AND: [CarouselImageWhereInput!]
  OR: [CarouselImageWhereInput!]
  NOT: [CarouselImageWhereInput!]
  id: IDFilter
  carousel: CarouselWhereInput
  media: MediaFileWhereInput
  url: StringFilter
  alt: StringFilter
  caption: StringFilter
  link_url: StringFilter
  order: IntNullableFilter
  is_active: BooleanFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input CarouselImageOrderByInput {
  id: OrderDirection
  url: OrderDirection
  alt: OrderDirection
  caption: OrderDirection
  link_url: OrderDirection
  order: OrderDirection
  is_active: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input CarouselImageUpdateInput {
  carousel: CarouselRelateToOneForUpdateInput
  media: MediaFileRelateToOneForUpdateInput
  url: String
  alt: String
  caption: String
  link_url: String
  order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input MediaFileRelateToOneForUpdateInput {
  create: MediaFileCreateInput
  connect: MediaFileWhereUniqueInput
  disconnect: Boolean
}

input CarouselImageUpdateArgs {
  where: CarouselImageWhereUniqueInput!
  data: CarouselImageUpdateInput!
}

input CarouselImageCreateInput {
  carousel: CarouselRelateToOneForCreateInput
  media: MediaFileRelateToOneForCreateInput
  url: String
  alt: String
  caption: String
  link_url: String
  order: Int
  is_active: Boolean
  created_at: DateTime
  updated_at: DateTime
}

input MediaFileRelateToOneForCreateInput {
  create: MediaFileCreateInput
  connect: MediaFileWhereUniqueInput
}

type RichText {
  id: ID!
  block: Block
  name: String
  content: JSON
  text_align: String
  created_at: DateTime
  updated_at: DateTime
}

input RichTextWhereUniqueInput {
  id: ID
  block: BlockWhereUniqueInput
}

input RichTextWhereInput {
  AND: [RichTextWhereInput!]
  OR: [RichTextWhereInput!]
  NOT: [RichTextWhereInput!]
  id: IDFilter
  block: BlockWhereInput
  name: StringFilter
  text_align: StringNullableFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input RichTextOrderByInput {
  id: OrderDirection
  name: OrderDirection
  text_align: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input RichTextUpdateInput {
  block: BlockRelateToOneForUpdateInput
  name: String
  content: JSON
  text_align: String
  created_at: DateTime
  updated_at: DateTime
}

input RichTextUpdateArgs {
  where: RichTextWhereUniqueInput!
  data: RichTextUpdateInput!
}

input RichTextCreateInput {
  block: BlockRelateToOneForCreateInput
  name: String
  content: JSON
  text_align: String
  created_at: DateTime
  updated_at: DateTime
}

type ImageBanner {
  id: ID!
  block: Block
  name: String
  media: MediaFile
  url: String
  alt: String
  link_url: String
  overlay_text: String
  overlay_position: String
  created_at: DateTime
  updated_at: DateTime
}

input ImageBannerWhereUniqueInput {
  id: ID
  block: BlockWhereUniqueInput
}

input ImageBannerWhereInput {
  AND: [ImageBannerWhereInput!]
  OR: [ImageBannerWhereInput!]
  NOT: [ImageBannerWhereInput!]
  id: IDFilter
  block: BlockWhereInput
  name: StringFilter
  media: MediaFileWhereInput
  url: StringFilter
  alt: StringFilter
  link_url: StringFilter
  overlay_text: StringFilter
  overlay_position: StringNullableFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input ImageBannerOrderByInput {
  id: OrderDirection
  name: OrderDirection
  url: OrderDirection
  alt: OrderDirection
  link_url: OrderDirection
  overlay_text: OrderDirection
  overlay_position: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input ImageBannerUpdateInput {
  block: BlockRelateToOneForUpdateInput
  name: String
  media: MediaFileRelateToOneForUpdateInput
  url: String
  alt: String
  link_url: String
  overlay_text: String
  overlay_position: String
  created_at: DateTime
  updated_at: DateTime
}

input ImageBannerUpdateArgs {
  where: ImageBannerWhereUniqueInput!
  data: ImageBannerUpdateInput!
}

input ImageBannerCreateInput {
  block: BlockRelateToOneForCreateInput
  name: String
  media: MediaFileRelateToOneForCreateInput
  url: String
  alt: String
  link_url: String
  overlay_text: String
  overlay_position: String
  created_at: DateTime
  updated_at: DateTime
}

type VideoEmbed {
  id: ID!
  block: Block
  name: String
  provider: String
  video_id: String
  video_url: String
  title: String
  description: String
  thumbnail_url: String
  autoplay: Boolean
  controls: Boolean
  mute: Boolean
  loop: Boolean
  aspect_ratio: String
  created_at: DateTime
  updated_at: DateTime
}

input VideoEmbedWhereUniqueInput {
  id: ID
  block: BlockWhereUniqueInput
}

input VideoEmbedWhereInput {
  AND: [VideoEmbedWhereInput!]
  OR: [VideoEmbedWhereInput!]
  NOT: [VideoEmbedWhereInput!]
  id: IDFilter
  block: BlockWhereInput
  name: StringFilter
  provider: StringFilter
  video_id: StringFilter
  video_url: StringFilter
  title: StringFilter
  description: StringFilter
  thumbnail_url: StringFilter
  autoplay: BooleanFilter
  controls: BooleanFilter
  mute: BooleanFilter
  loop: BooleanFilter
  aspect_ratio: StringFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input VideoEmbedOrderByInput {
  id: OrderDirection
  name: OrderDirection
  provider: OrderDirection
  video_id: OrderDirection
  video_url: OrderDirection
  title: OrderDirection
  description: OrderDirection
  thumbnail_url: OrderDirection
  autoplay: OrderDirection
  controls: OrderDirection
  mute: OrderDirection
  loop: OrderDirection
  aspect_ratio: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input VideoEmbedUpdateInput {
  block: BlockRelateToOneForUpdateInput
  name: String
  provider: String
  video_id: String
  video_url: String
  title: String
  description: String
  thumbnail_url: String
  autoplay: Boolean
  controls: Boolean
  mute: Boolean
  loop: Boolean
  aspect_ratio: String
  created_at: DateTime
  updated_at: DateTime
}

input VideoEmbedUpdateArgs {
  where: VideoEmbedWhereUniqueInput!
  data: VideoEmbedUpdateInput!
}

input VideoEmbedCreateInput {
  block: BlockRelateToOneForCreateInput
  name: String
  provider: String
  video_id: String
  video_url: String
  title: String
  description: String
  thumbnail_url: String
  autoplay: Boolean
  controls: Boolean
  mute: Boolean
  loop: Boolean
  aspect_ratio: String
  created_at: DateTime
  updated_at: DateTime
}

type CustomBlock {
  id: ID!
  block: Block
  name: String
  component_name: String
  data: JSON
  css_classes: String
  inline_styles: JSON
  created_at: DateTime
  updated_at: DateTime
}

input CustomBlockWhereUniqueInput {
  id: ID
  block: BlockWhereUniqueInput
}

input CustomBlockWhereInput {
  AND: [CustomBlockWhereInput!]
  OR: [CustomBlockWhereInput!]
  NOT: [CustomBlockWhereInput!]
  id: IDFilter
  block: BlockWhereInput
  name: StringFilter
  component_name: StringFilter
  css_classes: StringFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input CustomBlockOrderByInput {
  id: OrderDirection
  name: OrderDirection
  component_name: OrderDirection
  css_classes: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input CustomBlockUpdateInput {
  block: BlockRelateToOneForUpdateInput
  name: String
  component_name: String
  data: JSON
  css_classes: String
  inline_styles: JSON
  created_at: DateTime
  updated_at: DateTime
}

input CustomBlockUpdateArgs {
  where: CustomBlockWhereUniqueInput!
  data: CustomBlockUpdateInput!
}

input CustomBlockCreateInput {
  block: BlockRelateToOneForCreateInput
  name: String
  component_name: String
  data: JSON
  css_classes: String
  inline_styles: JSON
  created_at: DateTime
  updated_at: DateTime
}

type AuditLog {
  id: ID!
  tenant: School
  user: CmsUser
  table_name: String
  record_id: String
  operation: String
  old_values: JSON
  new_values: JSON
  ip_address: String
  user_agent: String
  session_id: String
  created_at: DateTime
}

input AuditLogWhereUniqueInput {
  id: ID
}

input AuditLogWhereInput {
  AND: [AuditLogWhereInput!]
  OR: [AuditLogWhereInput!]
  NOT: [AuditLogWhereInput!]
  id: IDFilter
  tenant: SchoolWhereInput
  user: CmsUserWhereInput
  table_name: StringFilter
  record_id: StringFilter
  operation: StringFilter
  ip_address: StringFilter
  user_agent: StringFilter
  session_id: StringFilter
  created_at: DateTimeNullableFilter
}

input AuditLogOrderByInput {
  id: OrderDirection
  table_name: OrderDirection
  record_id: OrderDirection
  operation: OrderDirection
  ip_address: OrderDirection
  user_agent: OrderDirection
  session_id: OrderDirection
  created_at: OrderDirection
}

input AuditLogUpdateInput {
  tenant: SchoolRelateToOneForUpdateInput
  user: CmsUserRelateToOneForUpdateInput
  table_name: String
  record_id: String
  operation: String
  old_values: JSON
  new_values: JSON
  ip_address: String
  user_agent: String
  session_id: String
  created_at: DateTime
}

input AuditLogUpdateArgs {
  where: AuditLogWhereUniqueInput!
  data: AuditLogUpdateInput!
}

input AuditLogCreateInput {
  tenant: SchoolRelateToOneForCreateInput
  user: CmsUserRelateToOneForCreateInput
  table_name: String
  record_id: String
  operation: String
  old_values: JSON
  new_values: JSON
  ip_address: String
  user_agent: String
  session_id: String
  created_at: DateTime
}

type UserSession {
  id: ID!
  user: CmsUser
  session_token: String
  ip_address: String
  user_agent: String
  is_active: Boolean
  expires_at: DateTime
  created_at: DateTime
  updated_at: DateTime
}

input UserSessionWhereUniqueInput {
  id: ID
  session_token: String
}

input UserSessionWhereInput {
  AND: [UserSessionWhereInput!]
  OR: [UserSessionWhereInput!]
  NOT: [UserSessionWhereInput!]
  id: IDFilter
  user: CmsUserWhereInput
  session_token: StringFilter
  ip_address: StringFilter
  user_agent: StringFilter
  is_active: BooleanFilter
  expires_at: DateTimeFilter
  created_at: DateTimeNullableFilter
  updated_at: DateTimeNullableFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeFilter
}

input UserSessionOrderByInput {
  id: OrderDirection
  session_token: OrderDirection
  ip_address: OrderDirection
  user_agent: OrderDirection
  is_active: OrderDirection
  expires_at: OrderDirection
  created_at: OrderDirection
  updated_at: OrderDirection
}

input UserSessionUpdateInput {
  user: CmsUserRelateToOneForUpdateInput
  session_token: String
  ip_address: String
  user_agent: String
  is_active: Boolean
  expires_at: DateTime
  created_at: DateTime
  updated_at: DateTime
}

input UserSessionUpdateArgs {
  where: UserSessionWhereUniqueInput!
  data: UserSessionUpdateInput!
}

input UserSessionCreateInput {
  user: CmsUserRelateToOneForCreateInput
  session_token: String
  ip_address: String
  user_agent: String
  is_active: Boolean
  expires_at: DateTime
  created_at: DateTime
  updated_at: DateTime
}

type ConnectionStat {
  id: ID!
  timestamp: DateTime
  active_connections: Int
  total_connections: Int
  slow_queries: Int
  cpu_usage: Float
  memory_usage: Float
  disk_usage: Float
}

input ConnectionStatWhereUniqueInput {
  id: ID
}

input ConnectionStatWhereInput {
  AND: [ConnectionStatWhereInput!]
  OR: [ConnectionStatWhereInput!]
  NOT: [ConnectionStatWhereInput!]
  id: IDFilter
  timestamp: DateTimeFilter
  active_connections: IntFilter
  total_connections: IntFilter
  slow_queries: IntNullableFilter
  cpu_usage: FloatNullableFilter
  memory_usage: FloatNullableFilter
  disk_usage: FloatNullableFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: FloatNullableFilter
}

input ConnectionStatOrderByInput {
  id: OrderDirection
  timestamp: OrderDirection
  active_connections: OrderDirection
  total_connections: OrderDirection
  slow_queries: OrderDirection
  cpu_usage: OrderDirection
  memory_usage: OrderDirection
  disk_usage: OrderDirection
}

input ConnectionStatUpdateInput {
  timestamp: DateTime
  active_connections: Int
  total_connections: Int
  slow_queries: Int
  cpu_usage: Float
  memory_usage: Float
  disk_usage: Float
}

input ConnectionStatUpdateArgs {
  where: ConnectionStatWhereUniqueInput!
  data: ConnectionStatUpdateInput!
}

input ConnectionStatCreateInput {
  timestamp: DateTime
  active_connections: Int
  total_connections: Int
  slow_queries: Int
  cpu_usage: Float
  memory_usage: Float
  disk_usage: Float
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createSchool(data: SchoolCreateInput!): School
  createSchools(data: [SchoolCreateInput!]!): [School]
  updateSchool(where: SchoolWhereUniqueInput!, data: SchoolUpdateInput!): School
  updateSchools(data: [SchoolUpdateArgs!]!): [School]
  deleteSchool(where: SchoolWhereUniqueInput!): School
  deleteSchools(where: [SchoolWhereUniqueInput!]!): [School]
  createCmsUser(data: CmsUserCreateInput!): CmsUser
  createCmsUsers(data: [CmsUserCreateInput!]!): [CmsUser]
  updateCmsUser(where: CmsUserWhereUniqueInput!, data: CmsUserUpdateInput!): CmsUser
  updateCmsUsers(data: [CmsUserUpdateArgs!]!): [CmsUser]
  deleteCmsUser(where: CmsUserWhereUniqueInput!): CmsUser
  deleteCmsUsers(where: [CmsUserWhereUniqueInput!]!): [CmsUser]
  createContentCategory(data: ContentCategoryCreateInput!): ContentCategory
  createContentCategories(data: [ContentCategoryCreateInput!]!): [ContentCategory]
  updateContentCategory(where: ContentCategoryWhereUniqueInput!, data: ContentCategoryUpdateInput!): ContentCategory
  updateContentCategories(data: [ContentCategoryUpdateArgs!]!): [ContentCategory]
  deleteContentCategory(where: ContentCategoryWhereUniqueInput!): ContentCategory
  deleteContentCategories(where: [ContentCategoryWhereUniqueInput!]!): [ContentCategory]
  createContent(data: ContentCreateInput!): Content
  createContents(data: [ContentCreateInput!]!): [Content]
  updateContent(where: ContentWhereUniqueInput!, data: ContentUpdateInput!): Content
  updateContents(data: [ContentUpdateArgs!]!): [Content]
  deleteContent(where: ContentWhereUniqueInput!): Content
  deleteContents(where: [ContentWhereUniqueInput!]!): [Content]
  createMediaFile(data: MediaFileCreateInput!): MediaFile
  createMediaFiles(data: [MediaFileCreateInput!]!): [MediaFile]
  updateMediaFile(where: MediaFileWhereUniqueInput!, data: MediaFileUpdateInput!): MediaFile
  updateMediaFiles(data: [MediaFileUpdateArgs!]!): [MediaFile]
  deleteMediaFile(where: MediaFileWhereUniqueInput!): MediaFile
  deleteMediaFiles(where: [MediaFileWhereUniqueInput!]!): [MediaFile]
  createNavigationMenu(data: NavigationMenuCreateInput!): NavigationMenu
  createNavigationMenus(data: [NavigationMenuCreateInput!]!): [NavigationMenu]
  updateNavigationMenu(where: NavigationMenuWhereUniqueInput!, data: NavigationMenuUpdateInput!): NavigationMenu
  updateNavigationMenus(data: [NavigationMenuUpdateArgs!]!): [NavigationMenu]
  deleteNavigationMenu(where: NavigationMenuWhereUniqueInput!): NavigationMenu
  deleteNavigationMenus(where: [NavigationMenuWhereUniqueInput!]!): [NavigationMenu]
  createNavigationMenuItem(data: NavigationMenuItemCreateInput!): NavigationMenuItem
  createNavigationMenuItems(data: [NavigationMenuItemCreateInput!]!): [NavigationMenuItem]
  updateNavigationMenuItem(where: NavigationMenuItemWhereUniqueInput!, data: NavigationMenuItemUpdateInput!): NavigationMenuItem
  updateNavigationMenuItems(data: [NavigationMenuItemUpdateArgs!]!): [NavigationMenuItem]
  deleteNavigationMenuItem(where: NavigationMenuItemWhereUniqueInput!): NavigationMenuItem
  deleteNavigationMenuItems(where: [NavigationMenuItemWhereUniqueInput!]!): [NavigationMenuItem]
  createSiteSetting(data: SiteSettingCreateInput!): SiteSetting
  createSiteSettings(data: [SiteSettingCreateInput!]!): [SiteSetting]
  updateSiteSetting(where: SiteSettingWhereUniqueInput!, data: SiteSettingUpdateInput!): SiteSetting
  updateSiteSettings(data: [SiteSettingUpdateArgs!]!): [SiteSetting]
  deleteSiteSetting(where: SiteSettingWhereUniqueInput!): SiteSetting
  deleteSiteSettings(where: [SiteSettingWhereUniqueInput!]!): [SiteSetting]
  createSection(data: SectionCreateInput!): Section
  createSections(data: [SectionCreateInput!]!): [Section]
  updateSection(where: SectionWhereUniqueInput!, data: SectionUpdateInput!): Section
  updateSections(data: [SectionUpdateArgs!]!): [Section]
  deleteSection(where: SectionWhereUniqueInput!): Section
  deleteSections(where: [SectionWhereUniqueInput!]!): [Section]
  createBlock(data: BlockCreateInput!): Block
  createBlocks(data: [BlockCreateInput!]!): [Block]
  updateBlock(where: BlockWhereUniqueInput!, data: BlockUpdateInput!): Block
  updateBlocks(data: [BlockUpdateArgs!]!): [Block]
  deleteBlock(where: BlockWhereUniqueInput!): Block
  deleteBlocks(where: [BlockWhereUniqueInput!]!): [Block]
  createCarousel(data: CarouselCreateInput!): Carousel
  createCarousels(data: [CarouselCreateInput!]!): [Carousel]
  updateCarousel(where: CarouselWhereUniqueInput!, data: CarouselUpdateInput!): Carousel
  updateCarousels(data: [CarouselUpdateArgs!]!): [Carousel]
  deleteCarousel(where: CarouselWhereUniqueInput!): Carousel
  deleteCarousels(where: [CarouselWhereUniqueInput!]!): [Carousel]
  createCarouselImage(data: CarouselImageCreateInput!): CarouselImage
  createCarouselImages(data: [CarouselImageCreateInput!]!): [CarouselImage]
  updateCarouselImage(where: CarouselImageWhereUniqueInput!, data: CarouselImageUpdateInput!): CarouselImage
  updateCarouselImages(data: [CarouselImageUpdateArgs!]!): [CarouselImage]
  deleteCarouselImage(where: CarouselImageWhereUniqueInput!): CarouselImage
  deleteCarouselImages(where: [CarouselImageWhereUniqueInput!]!): [CarouselImage]
  createRichText(data: RichTextCreateInput!): RichText
  createRichTexts(data: [RichTextCreateInput!]!): [RichText]
  updateRichText(where: RichTextWhereUniqueInput!, data: RichTextUpdateInput!): RichText
  updateRichTexts(data: [RichTextUpdateArgs!]!): [RichText]
  deleteRichText(where: RichTextWhereUniqueInput!): RichText
  deleteRichTexts(where: [RichTextWhereUniqueInput!]!): [RichText]
  createImageBanner(data: ImageBannerCreateInput!): ImageBanner
  createImageBanners(data: [ImageBannerCreateInput!]!): [ImageBanner]
  updateImageBanner(where: ImageBannerWhereUniqueInput!, data: ImageBannerUpdateInput!): ImageBanner
  updateImageBanners(data: [ImageBannerUpdateArgs!]!): [ImageBanner]
  deleteImageBanner(where: ImageBannerWhereUniqueInput!): ImageBanner
  deleteImageBanners(where: [ImageBannerWhereUniqueInput!]!): [ImageBanner]
  createVideoEmbed(data: VideoEmbedCreateInput!): VideoEmbed
  createVideoEmbeds(data: [VideoEmbedCreateInput!]!): [VideoEmbed]
  updateVideoEmbed(where: VideoEmbedWhereUniqueInput!, data: VideoEmbedUpdateInput!): VideoEmbed
  updateVideoEmbeds(data: [VideoEmbedUpdateArgs!]!): [VideoEmbed]
  deleteVideoEmbed(where: VideoEmbedWhereUniqueInput!): VideoEmbed
  deleteVideoEmbeds(where: [VideoEmbedWhereUniqueInput!]!): [VideoEmbed]
  createCustomBlock(data: CustomBlockCreateInput!): CustomBlock
  createCustomBlocks(data: [CustomBlockCreateInput!]!): [CustomBlock]
  updateCustomBlock(where: CustomBlockWhereUniqueInput!, data: CustomBlockUpdateInput!): CustomBlock
  updateCustomBlocks(data: [CustomBlockUpdateArgs!]!): [CustomBlock]
  deleteCustomBlock(where: CustomBlockWhereUniqueInput!): CustomBlock
  deleteCustomBlocks(where: [CustomBlockWhereUniqueInput!]!): [CustomBlock]
  createAuditLog(data: AuditLogCreateInput!): AuditLog
  createAuditLogs(data: [AuditLogCreateInput!]!): [AuditLog]
  updateAuditLog(where: AuditLogWhereUniqueInput!, data: AuditLogUpdateInput!): AuditLog
  updateAuditLogs(data: [AuditLogUpdateArgs!]!): [AuditLog]
  deleteAuditLog(where: AuditLogWhereUniqueInput!): AuditLog
  deleteAuditLogs(where: [AuditLogWhereUniqueInput!]!): [AuditLog]
  createUserSession(data: UserSessionCreateInput!): UserSession
  createUserSessions(data: [UserSessionCreateInput!]!): [UserSession]
  updateUserSession(where: UserSessionWhereUniqueInput!, data: UserSessionUpdateInput!): UserSession
  updateUserSessions(data: [UserSessionUpdateArgs!]!): [UserSession]
  deleteUserSession(where: UserSessionWhereUniqueInput!): UserSession
  deleteUserSessions(where: [UserSessionWhereUniqueInput!]!): [UserSession]
  createConnectionStat(data: ConnectionStatCreateInput!): ConnectionStat
  createConnectionStats(data: [ConnectionStatCreateInput!]!): [ConnectionStat]
  updateConnectionStat(where: ConnectionStatWhereUniqueInput!, data: ConnectionStatUpdateInput!): ConnectionStat
  updateConnectionStats(data: [ConnectionStatUpdateArgs!]!): [ConnectionStat]
  deleteConnectionStat(where: ConnectionStatWhereUniqueInput!): ConnectionStat
  deleteConnectionStats(where: [ConnectionStatWhereUniqueInput!]!): [ConnectionStat]
  endSession: Boolean!
  authenticateCmsUserWithPassword(email: String!, password: String!): CmsUserAuthenticationWithPasswordResult
  createInitialCmsUser(data: CreateInitialCmsUserInput!): CmsUserAuthenticationWithPasswordSuccess!
}

union CmsUserAuthenticationWithPasswordResult = CmsUserAuthenticationWithPasswordSuccess | CmsUserAuthenticationWithPasswordFailure

type CmsUserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: CmsUser!
}

type CmsUserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialCmsUserInput {
  tenant: SchoolRelateToOneForCreateInput
  email: String
  password: String
  first_name: String
  last_name: String
  role: String
}

type Query {
  school(where: SchoolWhereUniqueInput!): School
  schools(where: SchoolWhereInput! = {}, orderBy: [SchoolOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SchoolWhereUniqueInput): [School!]
  schoolsCount(where: SchoolWhereInput! = {}): Int
  cmsUser(where: CmsUserWhereUniqueInput!): CmsUser
  cmsUsers(where: CmsUserWhereInput! = {}, orderBy: [CmsUserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CmsUserWhereUniqueInput): [CmsUser!]
  cmsUsersCount(where: CmsUserWhereInput! = {}): Int
  contentCategory(where: ContentCategoryWhereUniqueInput!): ContentCategory
  contentCategories(where: ContentCategoryWhereInput! = {}, orderBy: [ContentCategoryOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentCategoryWhereUniqueInput): [ContentCategory!]
  contentCategoriesCount(where: ContentCategoryWhereInput! = {}): Int
  content(where: ContentWhereUniqueInput!): Content
  contents(where: ContentWhereInput! = {}, orderBy: [ContentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ContentWhereUniqueInput): [Content!]
  contentsCount(where: ContentWhereInput! = {}): Int
  mediaFile(where: MediaFileWhereUniqueInput!): MediaFile
  mediaFiles(where: MediaFileWhereInput! = {}, orderBy: [MediaFileOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: MediaFileWhereUniqueInput): [MediaFile!]
  mediaFilesCount(where: MediaFileWhereInput! = {}): Int
  navigationMenu(where: NavigationMenuWhereUniqueInput!): NavigationMenu
  navigationMenus(where: NavigationMenuWhereInput! = {}, orderBy: [NavigationMenuOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: NavigationMenuWhereUniqueInput): [NavigationMenu!]
  navigationMenusCount(where: NavigationMenuWhereInput! = {}): Int
  navigationMenuItem(where: NavigationMenuItemWhereUniqueInput!): NavigationMenuItem
  navigationMenuItems(where: NavigationMenuItemWhereInput! = {}, orderBy: [NavigationMenuItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: NavigationMenuItemWhereUniqueInput): [NavigationMenuItem!]
  navigationMenuItemsCount(where: NavigationMenuItemWhereInput! = {}): Int
  siteSetting(where: SiteSettingWhereUniqueInput!): SiteSetting
  siteSettings(where: SiteSettingWhereInput! = {}, orderBy: [SiteSettingOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SiteSettingWhereUniqueInput): [SiteSetting!]
  siteSettingsCount(where: SiteSettingWhereInput! = {}): Int
  section(where: SectionWhereUniqueInput!): Section
  sections(where: SectionWhereInput! = {}, orderBy: [SectionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: SectionWhereUniqueInput): [Section!]
  sectionsCount(where: SectionWhereInput! = {}): Int
  block(where: BlockWhereUniqueInput!): Block
  blocks(where: BlockWhereInput! = {}, orderBy: [BlockOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: BlockWhereUniqueInput): [Block!]
  blocksCount(where: BlockWhereInput! = {}): Int
  carousel(where: CarouselWhereUniqueInput!): Carousel
  carousels(where: CarouselWhereInput! = {}, orderBy: [CarouselOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarouselWhereUniqueInput): [Carousel!]
  carouselsCount(where: CarouselWhereInput! = {}): Int
  carouselImage(where: CarouselImageWhereUniqueInput!): CarouselImage
  carouselImages(where: CarouselImageWhereInput! = {}, orderBy: [CarouselImageOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarouselImageWhereUniqueInput): [CarouselImage!]
  carouselImagesCount(where: CarouselImageWhereInput! = {}): Int
  richText(where: RichTextWhereUniqueInput!): RichText
  richTexts(where: RichTextWhereInput! = {}, orderBy: [RichTextOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: RichTextWhereUniqueInput): [RichText!]
  richTextsCount(where: RichTextWhereInput! = {}): Int
  imageBanner(where: ImageBannerWhereUniqueInput!): ImageBanner
  imageBanners(where: ImageBannerWhereInput! = {}, orderBy: [ImageBannerOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ImageBannerWhereUniqueInput): [ImageBanner!]
  imageBannersCount(where: ImageBannerWhereInput! = {}): Int
  videoEmbed(where: VideoEmbedWhereUniqueInput!): VideoEmbed
  videoEmbeds(where: VideoEmbedWhereInput! = {}, orderBy: [VideoEmbedOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: VideoEmbedWhereUniqueInput): [VideoEmbed!]
  videoEmbedsCount(where: VideoEmbedWhereInput! = {}): Int
  customBlock(where: CustomBlockWhereUniqueInput!): CustomBlock
  customBlocks(where: CustomBlockWhereInput! = {}, orderBy: [CustomBlockOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CustomBlockWhereUniqueInput): [CustomBlock!]
  customBlocksCount(where: CustomBlockWhereInput! = {}): Int
  auditLog(where: AuditLogWhereUniqueInput!): AuditLog
  auditLogs(where: AuditLogWhereInput! = {}, orderBy: [AuditLogOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AuditLogWhereUniqueInput): [AuditLog!]
  auditLogsCount(where: AuditLogWhereInput! = {}): Int
  userSession(where: UserSessionWhereUniqueInput!): UserSession
  userSessions(where: UserSessionWhereInput! = {}, orderBy: [UserSessionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserSessionWhereUniqueInput): [UserSession!]
  userSessionsCount(where: UserSessionWhereInput! = {}): Int
  connectionStat(where: ConnectionStatWhereUniqueInput!): ConnectionStat
  connectionStats(where: ConnectionStatWhereInput! = {}, orderBy: [ConnectionStatOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ConnectionStatWhereUniqueInput): [ConnectionStat!]
  connectionStatsCount(where: ConnectionStatWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = CmsUser

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  initialColumns: [String!]!
  initialSearchFields: [String!]!
  initialSort: KeystoneAdminUISort
  isSingleton: Boolean!
  hideCreate: Boolean!
  hideDelete: Boolean!
  isHidden: Boolean!
  itemQueryName: String!
  listQueryName: String!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
